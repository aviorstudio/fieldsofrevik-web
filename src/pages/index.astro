---
import Layout from '../layouts/Layout.astro';
import { Image } from 'astro:assets';
import GameTitle from '../components/GameTitle.astro';
import Button from '../components/Button.astro';
import Carousel from '../components/Carousel.astro';
import { Carousel } from '../components/Carousel';

// Import assets
import titleConcept from '../assets/title-concept-2.png';
import crabKnight from '../assets/card-art/crab-knight-512x512.png';
import mosspawDuelist from '../assets/card-art/mosspaw-duelist-512x512.png';
import jellyChampion from '../assets/card-art/jelly-champion-512x512.png';
import greenGrowth from '../assets/card-art/green-growth-512x512.png';
import anastasiaChampion from '../assets/card-art/anastasia-champion-512x512.png';
import salamanderMage from '../assets/card-art/salamander-mage-512x512.png';
import greenMoss from '../assets/card-art/green-moss-512x512.png';
import crocodileMystic from '../assets/card-art/crocodile-mystic-512x512.png';
import orcaWarrior from '../assets/card-art/orca-warrior-512x512.png';
import osusMystic from '../assets/card-art/osus-mystic-512x512.png';
import toadWizard from '../assets/card-art/toad-wizard-512x512.png';
import steamcallerChampion from '../assets/card-art/steamcaller-champion-512x512.png';
import foxRogue from '../assets/card-art/fox-rogue-512x512.png';

const cardArtAssets = [
  { src: anastasiaChampion, name: 'Anastasia the Wild' },
  { src: crabKnight, name: 'Coralshell Knight' },
  { src: crocodileMystic, name: 'Crocus Mystic' },
  { src: foxRogue, name: 'Syndicate Rogue' },
  { src: greenGrowth, name: 'Overgrowth' },
  { src: greenMoss, name: 'Brianhorn Ritual' },
  { src: jellyChampion, name: 'Sparktide Jelly' },
  { src: mosspawDuelist, name: 'Mosspaw Duelist' },
  { src: orcaWarrior, name: 'Blackfin Raider' },
  { src: osusMystic, name: 'Osus Mystic' },
  { src: salamanderMage, name: 'Court Sorceror' },
  { src: steamcallerChampion, name: 'Emperium Lowlander' },
  { src: toadWizard, name: 'Lilydrop Seer' }
];

// Convert ImageMetadata to URL strings for Qwik component
const carouselItems = cardArtAssets.map(item => ({
  src: item.src.src,
  name: item.name
}));
---

<Layout>
  <div class="absolute inset-0 bg-gradient-to-b from-[#87CEEB] via-[#7EC8E3] to-[#98D8C8] -z-20"></div>
  <div class="absolute inset-0 flex items-center justify-center -z-10 overflow-hidden">
    <div class="relative h-full w-full flex items-center justify-center">
      <Image 
        src={titleConcept} 
        alt="Fields of Revik - Epic Fantasy Game" 
        class="h-full w-auto min-w-full md:min-w-0 object-cover md:object-contain" 
      />
      <div class="absolute inset-0 pointer-events-none">
        <div class="wind-gust wind-1"></div>
        <div class="wind-gust wind-2"></div>
        <div class="wind-gust wind-3"></div>
        <div class="wind-gust wind-4"></div>
        <div class="wind-gust wind-5"></div>
      </div>
    </div>
  </div>
  <div class="h-full flex flex-col gap-4 items-center p-8">
    <GameTitle />
      
    <div class="flex gap-3 mt-auto mb-8">
      <Button 
        variant="secondary" 
        id="about-btn"
      >
        About
      </Button>
      <!-- <Button 
        variant="primary" 
        href="https://app.fieldsofrevik.com"
      >
        Demo
      </Button> -->
    </div>
  
    <!-- Dialog -->
    <dialog id="carousel-dialog" class="backdrop:bg-black/50 bg-transparent p-8 m-auto rounded-2xl">
      <Carousel items={carouselItems} client:load />
    </dialog>
  </div>
</Layout>
 

<script>
  const aboutBtn = document.getElementById('about-btn');
  const dialog = document.getElementById('carousel-dialog') as HTMLDialogElement;
  
  // Open dialog when About button is clicked
  aboutBtn?.addEventListener('click', (e) => {
    e.preventDefault();
    dialog?.showModal();
  });
  
  // Close dialog when clicking on backdrop
  dialog?.addEventListener('click', (e) => {
    if (e.target === dialog) {
      dialog.close();
    }
  });
</script>

<style>
  @keyframes wind-flow {
    0% {
      transform: translateX(-100%) translateY(0) scaleY(1);
      opacity: 0;
    }
    10% {
      opacity: 0.7;
    }
    50% {
      transform: translateX(50vw) translateY(-10px) scaleY(1.1);
      opacity: 0.5;
    }
    90% {
      opacity: 0.3;
    }
    100% {
      transform: translateX(120vw) translateY(5px) scaleY(0.9);
      opacity: 0;
    }
  }
  
  .wind-gust {
    position: absolute;
    width: 400px;
    height: 80px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      rgba(255, 255, 255, 0.4) 10%,
      rgba(255, 255, 255, 0.6) 20%,
      rgba(255, 255, 255, 0.3) 40%,
      transparent 60%,
      rgba(255, 255, 255, 0.4) 80%,
      transparent 100%);
    filter: blur(8px);
    animation: wind-flow 8s linear infinite;
    mix-blend-mode: screen;
  }
  
  .wind-gust::before,
  .wind-gust::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: inherit;
  }
  
  .wind-gust::before {
    top: -30px;
    transform: scaleX(0.7) scaleY(0.8);
    opacity: 0.6;
    filter: blur(10px);
  }
  
  .wind-gust::after {
    top: 30px;
    transform: scaleX(1.3) scaleY(0.6);
    opacity: 0.5;
    filter: blur(12px);
  }
  
  .wind-1 {
    top: 15%;
    animation-duration: 12s;
    animation-delay: 0s;
    height: 100px;
    opacity: 0.8;
  }
  
  .wind-2 {
    top: 35%;
    animation-duration: 10s;
    animation-delay: -3s;
    transform: scaleX(1.5);
    height: 120px;
    opacity: 0.7;
  }
  
  .wind-3 {
    top: 55%;
    animation-duration: 15s;
    animation-delay: -6s;
    height: 90px;
    filter: blur(15px);
    opacity: 0.9;
  }
  
  .wind-4 {
    top: 70%;
    animation-duration: 11s;
    animation-delay: -9s;
    transform: scaleX(0.8);
    height: 110px;
    opacity: 0.6;
  }
  
  .wind-5 {
    top: 85%;
    animation-duration: 13s;
    animation-delay: -4s;
    height: 80px;
    opacity: 0.8;
  }
  
  @media (max-width: 768px) {
    .wind-gust {
      width: 200px;
    }
  }
</style>